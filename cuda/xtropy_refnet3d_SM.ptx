//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21554848
// Cuda compilation tools, release 8.0, V8.0.61
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_50
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func  (.param .b64 func_retval0) cudaGetParameterBufferV2
(
	.param .b64 cudaGetParameterBufferV2_param_0,
	.param .align 4 .b8 cudaGetParameterBufferV2_param_1[12],
	.param .align 4 .b8 cudaGetParameterBufferV2_param_2[12],
	.param .b32 cudaGetParameterBufferV2_param_3
)
;
.extern .func  (.param .b32 func_retval0) cudaLaunchDeviceV2
(
	.param .b64 cudaLaunchDeviceV2_param_0,
	.param .b64 cudaLaunchDeviceV2_param_1
)
;
.extern .shared .align 4 .b8 gSM[];

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z11get_index_xii
.visible .func  (.param .b32 func_retval0) _Z11get_index_xii(
	.param .b32 _Z11get_index_xii_param_0,
	.param .b32 _Z11get_index_xii_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;


	ld.param.u32 	%r4, [_Z11get_index_xii_param_0];
	ld.param.u32 	%r5, [_Z11get_index_xii_param_1];
	setp.eq.s32	%p1, %r5, -1;
	@%p1 bra 	BB6_2;

	mov.u32 	%r6, %nctaid.x;
	add.s32 	%r11, %r6, %r5;
	bra.uni 	BB6_3;

BB6_2:
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r11, %r8, %r7, %r9;

BB6_3:
	setp.lt.s32	%p2, %r11, %r4;
	selp.b32	%r10, %r11, -1, %p2;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z11get_index_yii
.visible .func  (.param .b32 func_retval0) _Z11get_index_yii(
	.param .b32 _Z11get_index_yii_param_0,
	.param .b32 _Z11get_index_yii_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;


	ld.param.u32 	%r4, [_Z11get_index_yii_param_0];
	ld.param.u32 	%r5, [_Z11get_index_yii_param_1];
	setp.eq.s32	%p1, %r5, -1;
	@%p1 bra 	BB7_2;

	mov.u32 	%r6, %nctaid.y;
	add.s32 	%r11, %r6, %r5;
	bra.uni 	BB7_3;

BB7_2:
	mov.u32 	%r7, %ntid.y;
	mov.u32 	%r8, %ctaid.y;
	mov.u32 	%r9, %tid.y;
	mad.lo.s32 	%r11, %r8, %r7, %r9;

BB7_3:
	setp.lt.s32	%p2, %r11, %r4;
	selp.b32	%r10, %r11, -1, %p2;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z11get_index_zii
.visible .func  (.param .b32 func_retval0) _Z11get_index_zii(
	.param .b32 _Z11get_index_zii_param_0,
	.param .b32 _Z11get_index_zii_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<12>;


	ld.param.u32 	%r4, [_Z11get_index_zii_param_0];
	ld.param.u32 	%r5, [_Z11get_index_zii_param_1];
	setp.eq.s32	%p1, %r5, -1;
	@%p1 bra 	BB8_2;

	mov.u32 	%r6, %nctaid.z;
	add.s32 	%r11, %r6, %r5;
	bra.uni 	BB8_3;

BB8_2:
	mov.u32 	%r7, %ntid.z;
	mov.u32 	%r8, %ctaid.z;
	mov.u32 	%r9, %tid.z;
	mad.lo.s32 	%r11, %r8, %r7, %r9;

BB8_3:
	setp.lt.s32	%p2, %r11, %r4;
	selp.b32	%r10, %r11, -1, %p2;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z8Gaussianfff
.visible .func  (.param .b32 func_retval0) _Z8Gaussianfff(
	.param .b32 _Z8Gaussianfff_param_0,
	.param .b32 _Z8Gaussianfff_param_1,
	.param .b32 _Z8Gaussianfff_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<9>;


	ld.param.f32 	%f15, [_Z8Gaussianfff_param_0];
	ld.param.f32 	%f16, [_Z8Gaussianfff_param_1];
	ld.param.f32 	%f35, [_Z8Gaussianfff_param_2];
	cvt.f64.f32	%fd2, %f35;
	mul.f64 	%fd3, %fd2, 0d401921FB54442D18;
	sqrt.rn.f64 	%fd4, %fd3;
	rcp.rn.f64 	%fd1, %fd4;
	sub.f32 	%f33, %f15, %f16;
	mov.f32 	%f32, 0f3F800000;
	mov.u32 	%r9, 2;
	bra.uni 	BB9_1;

BB9_4:
	mul.rn.f32 	%f33, %f33, %f33;

BB9_1:
	and.b32  	%r6, %r9, 1;
	setp.eq.b32	%p1, %r6, 1;
	@!%p1 bra 	BB9_3;
	bra.uni 	BB9_2;

BB9_2:
	mul.rn.f32 	%f32, %f32, %f33;

BB9_3:
	shr.u32 	%r9, %r9, 1;
	setp.eq.s32	%p2, %r9, 0;
	@%p2 bra 	BB9_5;
	bra.uni 	BB9_4;

BB9_5:
	neg.f32 	%f7, %f32;
	mov.f32 	%f34, 0f3F800000;
	mov.u32 	%r10, 2;
	bra.uni 	BB9_6;

BB9_9:
	mul.rn.f32 	%f35, %f35, %f35;

BB9_6:
	and.b32  	%r8, %r10, 1;
	setp.eq.b32	%p3, %r8, 1;
	@!%p3 bra 	BB9_8;
	bra.uni 	BB9_7;

BB9_7:
	mul.rn.f32 	%f34, %f34, %f35;

BB9_8:
	shr.u32 	%r10, %r10, 1;
	setp.eq.s32	%p4, %r10, 0;
	@%p4 bra 	BB9_10;
	bra.uni 	BB9_9;

BB9_10:
	add.f32 	%f20, %f34, %f34;
	div.rn.f32 	%f21, %f7, %f20;
	mul.f32 	%f22, %f21, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f23, %f22;
	mov.f32 	%f24, 0fBF317200;
	fma.rn.f32 	%f25, %f23, %f24, %f21;
	mov.f32 	%f26, 0fB5BFBE8E;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mul.f32 	%f19, %f27, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f18,%f19;
	// inline asm
	add.f32 	%f28, %f23, 0f00000000;
	ex2.approx.f32 	%f29, %f28;
	mul.f32 	%f30, %f18, %f29;
	setp.lt.f32	%p5, %f21, 0fC2D20000;
	setp.gt.f32	%p6, %f21, 0f42D20000;
	cvt.f64.f32	%fd5, %f30;
	selp.f64	%fd6, 0d0000000000000000, %fd5, %p5;
	selp.f64	%fd7, 0d7FF0000000000000, %fd6, %p6;
	mul.f64 	%fd8, %fd1, %fd7;
	cvt.rn.f32.f64	%f31, %fd8;
	st.param.f32	[func_retval0+0], %f31;
	ret;
}

	// .globl	_Z14Gaussian_primefff
.visible .func  (.param .b32 func_retval0) _Z14Gaussian_primefff(
	.param .b32 _Z14Gaussian_primefff_param_0,
	.param .b32 _Z14Gaussian_primefff_param_1,
	.param .b32 _Z14Gaussian_primefff_param_2
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<46>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<9>;


	ld.param.f32 	%f20, [_Z14Gaussian_primefff_param_0];
	ld.param.f32 	%f21, [_Z14Gaussian_primefff_param_1];
	ld.param.f32 	%f18, [_Z14Gaussian_primefff_param_2];
	sub.f32 	%f41, %f20, %f21;
	neg.f32 	%f22, %f41;
	cvt.f64.f32	%fd1, %f22;
	mov.f32 	%f39, 0f3F800000;
	mov.u32 	%r13, 3;
	mov.f32 	%f45, %f18;
	bra.uni 	BB10_1;

BB10_4:
	mul.rn.f32 	%f6, %f3, %f3;
	mov.f32 	%f45, %f6;

BB10_1:
	mov.f32 	%f3, %f45;
	and.b32  	%r8, %r13, 1;
	setp.eq.b32	%p1, %r8, 1;
	@!%p1 bra 	BB10_3;
	bra.uni 	BB10_2;

BB10_2:
	mul.rn.f32 	%f39, %f39, %f3;

BB10_3:
	shr.u32 	%r13, %r13, 1;
	setp.eq.s32	%p2, %r13, 0;
	@%p2 bra 	BB10_5;
	bra.uni 	BB10_4;

BB10_5:
	cvt.f64.f32	%fd3, %f39;
	mul.f64 	%fd4, %fd3, 0d40040D931FF62705;
	div.rn.f64 	%fd2, %fd1, %fd4;
	mov.f32 	%f40, 0f3F800000;
	mov.u32 	%r14, 2;
	bra.uni 	BB10_6;

BB10_9:
	mul.rn.f32 	%f41, %f41, %f41;

BB10_6:
	and.b32  	%r10, %r14, 1;
	setp.eq.b32	%p3, %r10, 1;
	@!%p3 bra 	BB10_8;
	bra.uni 	BB10_7;

BB10_7:
	mul.rn.f32 	%f40, %f40, %f41;

BB10_8:
	shr.u32 	%r14, %r14, 1;
	setp.eq.s32	%p4, %r14, 0;
	@%p4 bra 	BB10_10;
	bra.uni 	BB10_9;

BB10_10:
	neg.f32 	%f12, %f40;
	mov.f32 	%f42, 0f3F800000;
	mov.u32 	%r15, 2;
	mov.f32 	%f44, %f18;
	bra.uni 	BB10_11;

BB10_14:
	mul.rn.f32 	%f44, %f44, %f44;

BB10_11:
	and.b32  	%r12, %r15, 1;
	setp.eq.b32	%p5, %r12, 1;
	@!%p5 bra 	BB10_13;
	bra.uni 	BB10_12;

BB10_12:
	mul.rn.f32 	%f42, %f42, %f44;

BB10_13:
	shr.u32 	%r15, %r15, 1;
	setp.eq.s32	%p6, %r15, 0;
	@%p6 bra 	BB10_15;
	bra.uni 	BB10_14;

BB10_15:
	add.f32 	%f27, %f42, %f42;
	div.rn.f32 	%f28, %f12, %f27;
	mul.f32 	%f29, %f28, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f30, %f29;
	mov.f32 	%f31, 0fBF317200;
	fma.rn.f32 	%f32, %f30, %f31, %f28;
	mov.f32 	%f33, 0fB5BFBE8E;
	fma.rn.f32 	%f34, %f30, %f33, %f32;
	mul.f32 	%f26, %f34, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f25,%f26;
	// inline asm
	add.f32 	%f35, %f30, 0f00000000;
	ex2.approx.f32 	%f36, %f35;
	mul.f32 	%f37, %f25, %f36;
	setp.lt.f32	%p7, %f28, 0fC2D20000;
	setp.gt.f32	%p8, %f28, 0f42D20000;
	cvt.f64.f32	%fd5, %f37;
	selp.f64	%fd6, 0d0000000000000000, %fd5, %p7;
	selp.f64	%fd7, 0d7FF0000000000000, %fd6, %p8;
	mul.f64 	%fd8, %fd2, %fd7;
	cvt.rn.f32.f64	%f38, %fd8;
	st.param.f32	[func_retval0+0], %f38;
	ret;
}

	// .globl	_Z12CC_reductionPfPKfS1_S1_S1_ifi
.visible .entry _Z12CC_reductionPfPKfS1_S1_S1_ifi(
	.param .u64 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_0,
	.param .u64 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_1,
	.param .u64 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_2,
	.param .u64 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_3,
	.param .u64 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_4,
	.param .u32 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_5,
	.param .f32 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_6,
	.param .u32 _Z12CC_reductionPfPKfS1_S1_S1_ifi_param_7
)
{
	.reg .pred 	%p<24>;
	.reg .f32 	%f<68>;
	.reg .b32 	%r<30>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<22>;


	ld.param.u64 	%rd5, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_0];
	ld.param.u64 	%rd6, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_1];
	ld.param.u64 	%rd7, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_2];
	ld.param.u64 	%rd8, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_3];
	ld.param.u64 	%rd9, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_4];
	ld.param.u32 	%r12, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_5];
	ld.param.f32 	%f13, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_6];
	ld.param.u32 	%r13, [_Z12CC_reductionPfPKfS1_S1_S1_ifi_param_7];
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %tid.x;
	add.s32 	%r27, %r14, %r15;
	mov.u32 	%r2, %ntid.x;
	mul.wide.u32 	%rd10, %r15, 4;
	mov.u64 	%rd11, gSM;
	add.s64 	%rd1, %rd11, %rd10;
	setp.ge.u32	%p1, %r27, %r13;
	@%p1 bra 	BB11_16;

	cvta.to.global.u64 	%rd2, %rd7;
	cvta.to.global.u64 	%rd3, %rd8;
	cvta.to.global.u64 	%rd4, %rd6;
	mov.u32 	%r3, %nctaid.x;
	cvt.f64.f32	%fd3, %f13;
	mul.f64 	%fd1, %fd3, 0d401921FB54442D18;
	cvta.to.global.u64 	%rd17, %rd9;
	sqrt.rn.f64 	%fd4, %fd1;
	rcp.rn.f64 	%fd2, %fd4;

BB11_2:
	sub.s32 	%r5, %r27, %r12;
	setp.gt.u32	%p2, %r5, %r13;
	@%p2 bra 	BB11_14;
	bra.uni 	BB11_3;

BB11_14:
	mov.u32 	%r20, 0;
	st.shared.u32 	[%rd1], %r20;
	bra.uni 	BB11_15;

BB11_3:
	mul.wide.u32 	%rd12, %r27, 4;
	add.s64 	%rd13, %rd4, %rd12;
	add.s64 	%rd14, %rd3, %rd12;
	ld.global.f32 	%f15, [%rd14];
	ld.global.f32 	%f16, [%rd13];
	mul.f32 	%f17, %f16, %f15;
	mul.wide.u32 	%rd15, %r5, 4;
	add.s64 	%rd16, %rd2, %rd15;
	add.s64 	%rd18, %rd17, %rd15;
	ld.global.f32 	%f18, [%rd18];
	ld.global.f32 	%f19, [%rd16];
	mul.f32 	%f20, %f19, %f18;
	sub.f32 	%f65, %f17, %f20;
	mov.f32 	%f64, 0f3F800000;
	mov.u32 	%r28, 2;
	bra.uni 	BB11_4;

BB11_7:
	mul.rn.f32 	%f65, %f65, %f65;

BB11_4:
	and.b32  	%r17, %r28, 1;
	setp.eq.b32	%p3, %r17, 1;
	@!%p3 bra 	BB11_6;
	bra.uni 	BB11_5;

BB11_5:
	mul.rn.f32 	%f64, %f64, %f65;

BB11_6:
	shr.u32 	%r28, %r28, 1;
	setp.eq.s32	%p4, %r28, 0;
	@%p4 bra 	BB11_8;
	bra.uni 	BB11_7;

BB11_8:
	neg.f32 	%f7, %f64;
	mov.f32 	%f66, 0f3F800000;
	mov.u32 	%r29, 2;
	mov.f32 	%f67, %f13;
	bra.uni 	BB11_9;

BB11_12:
	mul.rn.f32 	%f12, %f9, %f9;
	mov.f32 	%f67, %f12;

BB11_9:
	mov.f32 	%f9, %f67;
	and.b32  	%r19, %r29, 1;
	setp.eq.b32	%p5, %r19, 1;
	@!%p5 bra 	BB11_11;
	bra.uni 	BB11_10;

BB11_10:
	mul.rn.f32 	%f66, %f66, %f9;

BB11_11:
	shr.u32 	%r29, %r29, 1;
	setp.eq.s32	%p6, %r29, 0;
	@%p6 bra 	BB11_13;
	bra.uni 	BB11_12;

BB11_13:
	add.f32 	%f24, %f66, %f66;
	div.rn.f32 	%f25, %f7, %f24;
	mul.f32 	%f26, %f25, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f27, %f26;
	mov.f32 	%f28, 0fBF317200;
	fma.rn.f32 	%f29, %f27, %f28, %f25;
	mov.f32 	%f30, 0fB5BFBE8E;
	fma.rn.f32 	%f31, %f27, %f30, %f29;
	mul.f32 	%f23, %f31, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f32, %f27, 0f00000000;
	ex2.approx.f32 	%f33, %f32;
	mul.f32 	%f34, %f22, %f33;
	setp.lt.f32	%p7, %f25, 0fC2D20000;
	setp.gt.f32	%p8, %f25, 0f42D20000;
	cvt.f64.f32	%fd5, %f34;
	selp.f64	%fd6, 0d0000000000000000, %fd5, %p7;
	selp.f64	%fd7, 0d7FF0000000000000, %fd6, %p8;
	mul.f64 	%fd8, %fd2, %fd7;
	cvt.rn.f32.f64	%f35, %fd8;
	st.shared.f32 	[%rd1], %f35;
	add.s32 	%r27, %r27, %r3;

BB11_15:
	setp.lt.u32	%p9, %r27, %r13;
	@%p9 bra 	BB11_2;

BB11_16:
	bar.sync 	0;
	setp.lt.u32	%p10, %r2, 512;
	@%p10 bra 	BB11_20;

	setp.gt.u32	%p11, %r15, 255;
	@%p11 bra 	BB11_19;

	ld.shared.f32 	%f36, [%rd1];
	ld.shared.f32 	%f37, [%rd1+1024];
	add.f32 	%f38, %f37, %f36;
	st.shared.f32 	[%rd1], %f38;

BB11_19:
	bar.sync 	0;

BB11_20:
	setp.lt.u32	%p12, %r2, 256;
	@%p12 bra 	BB11_24;

	setp.gt.u32	%p13, %r15, 127;
	@%p13 bra 	BB11_23;

	ld.shared.f32 	%f39, [%rd1];
	ld.shared.f32 	%f40, [%rd1+512];
	add.f32 	%f41, %f40, %f39;
	st.shared.f32 	[%rd1], %f41;

BB11_23:
	bar.sync 	0;

BB11_24:
	setp.lt.u32	%p14, %r2, 128;
	@%p14 bra 	BB11_28;

	setp.gt.u32	%p15, %r15, 63;
	@%p15 bra 	BB11_27;

	ld.shared.f32 	%f42, [%rd1];
	ld.shared.f32 	%f43, [%rd1+256];
	add.f32 	%f44, %f43, %f42;
	st.shared.f32 	[%rd1], %f44;

BB11_27:
	bar.sync 	0;

BB11_28:
	setp.gt.u32	%p16, %r15, 31;
	@%p16 bra 	BB11_41;

	setp.lt.u32	%p17, %r2, 64;
	@%p17 bra 	BB11_31;

	ld.shared.f32 	%f45, [%rd1];
	ld.shared.f32 	%f46, [%rd1+128];
	add.f32 	%f47, %f46, %f45;
	st.shared.f32 	[%rd1], %f47;

BB11_31:
	setp.lt.u32	%p18, %r2, 32;
	@%p18 bra 	BB11_33;

	ld.shared.f32 	%f48, [%rd1];
	ld.shared.f32 	%f49, [%rd1+64];
	add.f32 	%f50, %f49, %f48;
	st.shared.f32 	[%rd1], %f50;

BB11_33:
	setp.lt.u32	%p19, %r2, 16;
	@%p19 bra 	BB11_35;

	ld.shared.f32 	%f51, [%rd1];
	ld.shared.f32 	%f52, [%rd1+32];
	add.f32 	%f53, %f52, %f51;
	st.shared.f32 	[%rd1], %f53;

BB11_35:
	setp.lt.u32	%p20, %r2, 8;
	@%p20 bra 	BB11_37;

	ld.shared.f32 	%f54, [%rd1];
	ld.shared.f32 	%f55, [%rd1+16];
	add.f32 	%f56, %f55, %f54;
	st.shared.f32 	[%rd1], %f56;

BB11_37:
	setp.lt.u32	%p21, %r2, 4;
	@%p21 bra 	BB11_39;

	ld.shared.f32 	%f57, [%rd1];
	ld.shared.f32 	%f58, [%rd1+8];
	add.f32 	%f59, %f58, %f57;
	st.shared.f32 	[%rd1], %f59;

BB11_39:
	setp.lt.u32	%p22, %r2, 2;
	@%p22 bra 	BB11_41;

	ld.shared.f32 	%f60, [%rd1];
	ld.shared.f32 	%f61, [%rd1+4];
	add.f32 	%f62, %f61, %f60;
	st.shared.f32 	[%rd1], %f62;

BB11_41:
	setp.ne.s32	%p23, %r15, 0;
	@%p23 bra 	BB11_43;

	ld.shared.f32 	%f63, [gSM];
	cvta.to.global.u64 	%rd19, %rd5;
	mul.wide.u32 	%rd20, %r14, 4;
	add.s64 	%rd21, %rd19, %rd20;
	st.global.f32 	[%rd21], %f63;

BB11_43:
	ret;
}

	// .globl	_Z3ACmPfPKfS1_S1_S1_PKifiiii
.visible .entry _Z3ACmPfPKfS1_S1_S1_PKifiiii(
	.param .u64 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_0,
	.param .u64 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_1,
	.param .u64 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_2,
	.param .u64 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_3,
	.param .u64 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_4,
	.param .u64 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_5,
	.param .f32 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_6,
	.param .u32 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_7,
	.param .u32 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_8,
	.param .u32 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_9,
	.param .u32 _Z3ACmPfPKfS1_S1_S1_PKifiiii_param_10
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<71>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd9, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_0];
	ld.param.u64 	%rd10, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_1];
	ld.param.u64 	%rd11, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_2];
	ld.param.u64 	%rd12, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_3];
	ld.param.u64 	%rd13, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_4];
	ld.param.u64 	%rd14, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_5];
	ld.param.f32 	%f4, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_6];
	ld.param.u32 	%r31, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_7];
	ld.param.u32 	%r32, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_8];
	ld.param.u32 	%r33, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_9];
	ld.param.u32 	%r34, [_Z3ACmPfPKfS1_S1_S1_PKifiiii_param_10];
	mov.u32 	%r35, %ctaid.x;
	mov.u32 	%r36, %ntid.x;
	mov.u32 	%r37, %tid.x;
	mad.lo.s32 	%r1, %r35, %r36, %r37;
	mov.u32 	%r38, %ctaid.y;
	mov.u32 	%r39, %ntid.y;
	mov.u32 	%r40, %tid.y;
	mad.lo.s32 	%r2, %r38, %r39, %r40;
	mov.u32 	%r41, %ctaid.z;
	mov.u32 	%r42, %ntid.z;
	mov.u32 	%r43, %tid.z;
	mad.lo.s32 	%r3, %r41, %r42, %r43;
	setp.lt.s32	%p1, %r3, %r34;
	selp.b32	%r67, %r3, -1, %p1;
	shr.s32 	%r44, %r32, 31;
	shr.u32 	%r45, %r44, 27;
	add.s32 	%r46, %r32, %r45;
	shr.s32 	%r5, %r46, 5;
	mul.wide.s32 	%rd15, %r5, 4;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p2, %r67, 0;
	@%p2 bra 	BB12_13;

	cvta.to.global.u64 	%rd2, %rd9;
	cvta.to.global.u64 	%rd3, %rd14;
	setp.lt.s32	%p3, %r1, %r31;
	selp.b32	%r69, %r1, -1, %p3;
	setp.lt.s32	%p4, %r2, %r33;
	selp.b32	%r68, %r2, -1, %p4;
	mov.u32 	%r8, %nctaid.z;
	mov.u32 	%r9, %nctaid.y;
	mov.u32 	%r11, 1;
	mov.u32 	%r13, %nctaid.x;

BB12_2:
	setp.lt.s32	%p5, %r68, 0;
	@%p5 bra 	BB12_12;

	mul.lo.s32 	%r17, %r67, %r33;

BB12_4:
	setp.lt.s32	%p6, %r69, 0;
	@%p6 bra 	BB12_11;

	add.s32 	%r47, %r68, %r17;
	mul.lo.s32 	%r48, %r47, %r32;
	mul.wide.s32 	%rd16, %r48, 4;
	add.s64 	%rd4, %rd10, %rd16;
	add.s64 	%rd5, %rd11, %rd16;
	mul.lo.s32 	%r20, %r47, %r31;

BB12_6:
	mul.wide.s32 	%rd17, %r69, 4;
	add.s64 	%rd18, %rd3, %rd17;
	ld.global.u32 	%r22, [%rd18];
	mov.u64 	%rd19, _Z12CC_reductionPfPKfS1_S1_S1_ifi;
	mov.u32 	%r49, 32;
	mov.u32 	%r70, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .align 4 .b8 param1[12];
	st.param.b32	[param1+0], %r5;
	st.param.b32	[param1+4], %r11;
	st.param.b32	[param1+8], %r11;
	.param .align 4 .b8 param2[12];
	st.param.b32	[param2+0], %r49;
	st.param.b32	[param2+4], %r11;
	st.param.b32	[param2+8], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r70;
	.param .b64 retval0;
	call.uni (retval0), 
	cudaGetParameterBufferV2, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b64	%rd6, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.eq.s64	%p7, %rd6, 0;
	@%p7 bra 	BB12_8;

	mul.lo.s32 	%r52, %r69, %r32;
	mul.wide.s32 	%rd20, %r52, 4;
	add.s64 	%rd21, %rd12, %rd20;
	add.s64 	%rd22, %rd13, %rd20;
	st.u64 	[%rd6], %rd1;
	st.u64 	[%rd6+8], %rd4;
	st.u64 	[%rd6+16], %rd5;
	st.u64 	[%rd6+24], %rd21;
	st.u64 	[%rd6+32], %rd22;
	mov.b32 	 %r53, %f4;
	st.v2.u32 	[%rd6+40], {%r22, %r53};
	st.u32 	[%rd6+48], %r32;
	mov.u64 	%rd23, 0;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 retval0;
	call.uni (retval0), 
	cudaLaunchDeviceV2, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r54, [retval0+0];
	
	//{
	}// Callseq End 2

BB12_8:
	mov.f32 	%f11, 0f00000000;
	mov.f32 	%f12, %f11;
	setp.lt.s32	%p8, %r32, 32;
	mov.u64 	%rd26, %rd1;
	@%p8 bra 	BB12_10;

BB12_9:
	mov.u64 	%rd7, %rd26;
	ld.f32 	%f7, [%rd7];
	add.f32 	%f12, %f12, %f7;
	add.s64 	%rd8, %rd7, 4;
	add.s32 	%r70, %r70, 1;
	setp.lt.s32	%p9, %r70, %r5;
	mov.u64 	%rd26, %rd8;
	mov.f32 	%f11, %f12;
	@%p9 bra 	BB12_9;

BB12_10:
	abs.s32 	%r56, %r22;
	div.s32 	%r58, %r11, %r32;
	sub.s32 	%r59, %r58, %r56;
	cvt.rn.f32.s32	%f8, %r59;
	mul.f32 	%f9, %f11, %f8;
	add.s32 	%r60, %r20, %r69;
	mul.wide.s32 	%rd24, %r60, 4;
	add.s64 	%rd25, %rd2, %rd24;
	st.global.f32 	[%rd25], %f9;
	add.s32 	%r61, %r13, %r69;
	setp.eq.s32	%p10, %r69, -1;
	selp.b32	%r62, %r1, %r61, %p10;
	setp.lt.s32	%p11, %r62, %r31;
	selp.b32	%r69, %r62, -1, %p11;
	setp.gt.s32	%p12, %r69, -1;
	@%p12 bra 	BB12_6;

BB12_11:
	add.s32 	%r63, %r9, %r68;
	setp.eq.s32	%p13, %r68, -1;
	selp.b32	%r64, %r2, %r63, %p13;
	setp.lt.s32	%p14, %r64, %r33;
	selp.b32	%r68, %r64, -1, %p14;
	setp.gt.s32	%p15, %r68, -1;
	@%p15 bra 	BB12_4;

BB12_12:
	add.s32 	%r65, %r8, %r67;
	setp.eq.s32	%p16, %r67, -1;
	selp.b32	%r66, %r3, %r65, %p16;
	setp.lt.s32	%p17, %r66, %r34;
	selp.b32	%r67, %r66, -1, %p17;
	setp.gt.s32	%p18, %r67, -1;
	@%p18 bra 	BB12_2;

BB12_13:
	ret;
}

	// .globl	_Z9ACm_primePfPKfS1_S1_S1_PKifiiii
.visible .entry _Z9ACm_primePfPKfS1_S1_S1_PKifiiii(
	.param .u64 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_0,
	.param .u64 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_1,
	.param .u64 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_2,
	.param .u64 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_3,
	.param .u64 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_4,
	.param .u64 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_5,
	.param .f32 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_6,
	.param .u32 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_7,
	.param .u32 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_8,
	.param .u32 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_9,
	.param .u32 _Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_10
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<104>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd7, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_0];
	ld.param.u64 	%rd8, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_1];
	ld.param.u64 	%rd9, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_2];
	ld.param.u64 	%rd10, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_3];
	ld.param.u64 	%rd11, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_4];
	ld.param.u64 	%rd12, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_5];
	ld.param.f32 	%f22, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_6];
	ld.param.u32 	%r48, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_7];
	ld.param.u32 	%r49, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_8];
	ld.param.u32 	%r50, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_9];
	ld.param.u32 	%r51, [_Z9ACm_primePfPKfS1_S1_S1_PKifiiii_param_10];
	mov.u32 	%r52, %ctaid.x;
	mov.u32 	%r53, %ntid.x;
	mov.u32 	%r54, %tid.x;
	mad.lo.s32 	%r1, %r52, %r53, %r54;
	setp.lt.s32	%p1, %r1, %r48;
	selp.b32	%r84, %r1, -1, %p1;
	mov.u32 	%r55, %ctaid.y;
	mov.u32 	%r56, %ntid.y;
	mov.u32 	%r57, %tid.y;
	mad.lo.s32 	%r3, %r55, %r56, %r57;
	mov.u32 	%r58, %ctaid.z;
	mov.u32 	%r59, %ntid.z;
	mov.u32 	%r60, %tid.z;
	mad.lo.s32 	%r4, %r58, %r59, %r60;
	setp.lt.s32	%p2, %r4, %r51;
	selp.b32	%r82, %r4, -1, %p2;
	cvta.to.global.u64 	%rd1, %rd12;
	setp.lt.s32	%p3, %r82, 0;
	@%p3 bra 	BB13_29;

	cvta.to.global.u64 	%rd2, %rd7;
	cvta.to.global.u64 	%rd3, %rd11;
	cvta.to.global.u64 	%rd4, %rd9;
	cvta.to.global.u64 	%rd5, %rd10;
	cvta.to.global.u64 	%rd6, %rd8;
	setp.lt.s32	%p4, %r3, %r50;
	selp.b32	%r83, %r3, -1, %p4;
	mul.wide.s32 	%rd13, %r84, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.u32 	%r99, [%rd14];
	mov.u32 	%r8, %nctaid.z;
	mov.u32 	%r9, %nctaid.y;
	mov.u32 	%r10, %nctaid.x;
	mul.lo.s32 	%r11, %r50, %r49;

BB13_2:
	mov.u32 	%r91, %r99;
	mov.u32 	%r98, %r91;
	setp.lt.s32	%p5, %r83, 0;
	@%p5 bra 	BB13_28;

	mul.lo.s32 	%r16, %r82, %r50;
	mul.lo.s32 	%r17, %r11, %r82;
	mov.u32 	%r97, %r98;

BB13_4:
	mov.u32 	%r87, %r97;
	mov.u32 	%r96, %r87;
	setp.lt.s32	%p6, %r84, 0;
	@%p6 bra 	BB13_27;

	add.s32 	%r61, %r83, %r16;
	mul.lo.s32 	%r21, %r61, %r48;
	mad.lo.s32 	%r22, %r83, %r49, %r17;
	mov.u32 	%r95, %r96;

BB13_6:
	mov.u32 	%r86, %r95;
	mov.u32 	%r23, %r86;
	mov.f32 	%f59, 0f00000000;
	mov.u32 	%r103, 1;
	setp.ge.s32	%p7, %r23, %r49;
	@%p7 bra 	BB13_26;

	mul.lo.s32 	%r25, %r84, %r49;
	mov.f32 	%f59, 0f00000000;
	mov.u32 	%r103, 1;
	mov.u32 	%r94, %r23;

BB13_8:
	mov.u32 	%r27, %r94;
	sub.s32 	%r28, %r27, %r23;
	setp.gt.s32	%p8, %r28, %r49;
	setp.lt.s32	%p9, %r27, 0;
	or.pred  	%p10, %p9, %p8;
	@%p10 bra 	BB13_25;

	add.s32 	%r65, %r22, %r27;
	mul.wide.s32 	%rd15, %r65, 4;
	add.s64 	%rd16, %rd6, %rd15;
	add.s32 	%r66, %r27, %r25;
	mul.wide.s32 	%rd17, %r66, 4;
	add.s64 	%rd18, %rd5, %rd17;
	ld.global.f32 	%f26, [%rd18];
	ld.global.f32 	%f27, [%rd16];
	mul.f32 	%f28, %f27, %f26;
	abs.s32 	%r67, %r28;
	add.s32 	%r68, %r22, %r67;
	mul.wide.s32 	%rd19, %r68, 4;
	add.s64 	%rd20, %rd4, %rd19;
	add.s32 	%r69, %r28, %r25;
	mul.wide.s32 	%rd21, %r69, 4;
	add.s64 	%rd22, %rd3, %rd21;
	ld.global.f32 	%f29, [%rd22];
	ld.global.f32 	%f30, [%rd20];
	mul.f32 	%f31, %f30, %f29;
	sub.f32 	%f54, %f28, %f31;
	neg.f32 	%f32, %f54;
	cvt.f64.f32	%fd1, %f32;
	mov.f32 	%f52, 0f3F800000;
	mov.u32 	%r100, 3;
	mov.f32 	%f58, %f22;
	bra.uni 	BB13_10;

BB13_13:
	mul.rn.f32 	%f7, %f4, %f4;
	mov.f32 	%f58, %f7;

BB13_10:
	mov.f32 	%f4, %f58;
	and.b32  	%r70, %r100, 1;
	setp.eq.b32	%p11, %r70, 1;
	@!%p11 bra 	BB13_12;
	bra.uni 	BB13_11;

BB13_11:
	mul.rn.f32 	%f52, %f52, %f4;

BB13_12:
	shr.u32 	%r100, %r100, 1;
	setp.eq.s32	%p12, %r100, 0;
	@%p12 bra 	BB13_14;
	bra.uni 	BB13_13;

BB13_14:
	cvt.f64.f32	%fd3, %f52;
	mul.f64 	%fd4, %fd3, 0d40040D931FF62705;
	div.rn.f64 	%fd2, %fd1, %fd4;
	mov.f32 	%f53, 0f3F800000;
	mov.u32 	%r101, 2;
	bra.uni 	BB13_15;

BB13_18:
	mul.rn.f32 	%f54, %f54, %f54;

BB13_15:
	and.b32  	%r72, %r101, 1;
	setp.eq.b32	%p13, %r72, 1;
	@!%p13 bra 	BB13_17;
	bra.uni 	BB13_16;

BB13_16:
	mul.rn.f32 	%f53, %f53, %f54;

BB13_17:
	shr.u32 	%r101, %r101, 1;
	setp.eq.s32	%p14, %r101, 0;
	@%p14 bra 	BB13_19;
	bra.uni 	BB13_18;

BB13_19:
	neg.f32 	%f13, %f53;
	mov.f32 	%f55, 0f3F800000;
	mov.u32 	%r102, 2;
	mov.f32 	%f57, %f22;
	bra.uni 	BB13_20;

BB13_23:
	mul.rn.f32 	%f57, %f57, %f57;

BB13_20:
	and.b32  	%r74, %r102, 1;
	setp.eq.b32	%p15, %r74, 1;
	@!%p15 bra 	BB13_22;
	bra.uni 	BB13_21;

BB13_21:
	mul.rn.f32 	%f55, %f55, %f57;

BB13_22:
	shr.u32 	%r102, %r102, 1;
	setp.eq.s32	%p16, %r102, 0;
	@%p16 bra 	BB13_24;
	bra.uni 	BB13_23;

BB13_24:
	add.f32 	%f37, %f55, %f55;
	div.rn.f32 	%f38, %f13, %f37;
	mul.f32 	%f39, %f38, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f40, %f39;
	mov.f32 	%f41, 0fBF317200;
	fma.rn.f32 	%f42, %f40, %f41, %f38;
	mov.f32 	%f43, 0fB5BFBE8E;
	fma.rn.f32 	%f44, %f40, %f43, %f42;
	mul.f32 	%f36, %f44, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f35,%f36;
	// inline asm
	add.f32 	%f45, %f40, 0f00000000;
	ex2.approx.f32 	%f46, %f45;
	mul.f32 	%f47, %f35, %f46;
	setp.lt.f32	%p17, %f38, 0fC2D20000;
	setp.gt.f32	%p18, %f38, 0f42D20000;
	cvt.f64.f32	%fd5, %f47;
	selp.f64	%fd6, 0d0000000000000000, %fd5, %p17;
	selp.f64	%fd7, 0d7FF0000000000000, %fd6, %p18;
	mul.f64 	%fd8, %fd2, %fd7;
	cvt.rn.f32.f64	%f48, %fd8;
	add.f32 	%f59, %f59, %f48;
	add.s32 	%r103, %r103, 1;

BB13_25:
	add.s32 	%r37, %r27, 1;
	setp.lt.s32	%p19, %r37, %r49;
	mov.u32 	%r94, %r37;
	@%p19 bra 	BB13_8;

BB13_26:
	cvt.rn.f32.s32	%f49, %r103;
	rcp.rn.f32 	%f50, %f49;
	mul.f32 	%f51, %f59, %f50;
	add.s32 	%r75, %r21, %r84;
	mul.wide.s32 	%rd23, %r75, 4;
	add.s64 	%rd24, %rd2, %rd23;
	st.global.f32 	[%rd24], %f51;
	add.s32 	%r76, %r10, %r84;
	setp.eq.s32	%p20, %r84, -1;
	selp.b32	%r77, %r1, %r76, %p20;
	setp.lt.s32	%p21, %r77, %r48;
	selp.b32	%r84, %r77, -1, %p21;
	mul.wide.s32 	%rd25, %r84, 4;
	add.s64 	%rd26, %rd1, %rd25;
	ld.global.u32 	%r95, [%rd26];
	setp.gt.s32	%p22, %r84, -1;
	mov.u32 	%r96, %r95;
	@%p22 bra 	BB13_6;

BB13_27:
	mov.u32 	%r97, %r96;
	add.s32 	%r78, %r9, %r83;
	setp.eq.s32	%p23, %r83, -1;
	selp.b32	%r79, %r3, %r78, %p23;
	setp.lt.s32	%p24, %r79, %r50;
	selp.b32	%r83, %r79, -1, %p24;
	setp.gt.s32	%p25, %r83, -1;
	mov.u32 	%r98, %r97;
	@%p25 bra 	BB13_4;

BB13_28:
	mov.u32 	%r99, %r98;
	add.s32 	%r80, %r8, %r82;
	setp.eq.s32	%p26, %r82, -1;
	selp.b32	%r81, %r4, %r80, %p26;
	setp.lt.s32	%p27, %r81, %r51;
	selp.b32	%r82, %r81, -1, %p27;
	setp.gt.s32	%p28, %r82, -1;
	@%p28 bra 	BB13_2;

BB13_29:
	ret;
}


